{{{header(tests,Richard Westhaver,ellis@rwest.io,core test results)}}}
* rust
** sys
These crates contain FFI bindings to foreign libraries, usually in C.
*** btrfs
*** btrfsutil
*** rocksdb
** lib
*** TODO alch
*** audio
#+begin_src shell :dir rust/lib/audio :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test default_device ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** crypto
#+begin_src shell :dir rust/lib/crypto :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 6 tests
test tests::salsa20_key0_iv1 ... ok
test tests::salsa20_key0_ivhi ... ok
test tests::salsa20_key1_iv0 ... ok
test tests::xsalsa20_encrypt_hello_world ... ok
test tests::xsalsa20_encrypt_zeros ... ok
test tests::gen_keypair ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** TODO db
#+begin_src shell :dir rust/lib/db :results output replace :exports results :eval no
cargo test
#+end_src

#+RESULTS:

*** flate
#+begin_src shell :dir rust/lib/flate :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test pack_test ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** hash
#+begin_src shell :dir rust/lib/hash :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 5 tests
test tests::hex_hash ... ok
test tests::id_hex ... ok
test tests::id_state_hash ... ok
test tests::rand_id ... ok
test tests::random_demon_id_is_valid ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** krypt
*** logger
#+begin_src shell :dir rust/lib/logger :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test tests::simple_init ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** sxp
#+begin_src shell :dir rust/lib/sxp :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test canonical_fmt ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 5 tests
test list_form ... ok
test nil_form ... ok
test num_form ... ok
test sym_form ... ok
test str_form ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 3 tests
test ser_enum ... ok
test ser_form ... ok
test ser_struct ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 5 tests
test list_end_token ... ok
test list_start_token ... ok
test num_token ... ok
test str_token ... ok
test sym_token ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** tenex
*** util
#+begin_src shell :dir rust/lib/util :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test tests::test_related_paths ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
* lisp
#+begin_src lisp :results silent
  (let ((systems 
          '("lisp/std/std.asd" "lisp/lib/log/log.asd" "lisp/lib/sxp/sxp.asd"
            "lisp/lib/rt/rt.asd" "lisp/lib/cli/cli.asd"
            "lisp/lib/rdb/rdb.asd" "lisp/lib/organ/organ.asd" "lisp/lib/skel/skel.asd"
            "lisp/lib/packy/packy.asd" "lisp/lib/nlp/nlp.asd" "lisp/lib/dot/dot.asd"
            "lisp/ffi/rocksdb/rocksdb.asd" "lisp/ffi/btrfs/btrfs.asd" "lisp/ffi/uring/uring.asd"
            "lisp/ffi/k/k.asd" "lisp/ffi/bqn/bqn.asd" "lisp/ffi/tree-sitter/tree-sitter.asd" 
            "lisp/ffi/blake3/blake3.asd" "lisp/ffi/alpm/alpm.asd" "lisp/ffi/xkb/xkb.asd")))
    (mapc (lambda (x) (asdf:load-asd (pathname x))) systems))
  (asdf:load-system :std)
  (asdf:load-system :rt)
#+end_src

#+begin_src lisp :results silent
  (require :sb-cover)
  (defun gen-report (system &optional (directory #P"/tmp/core/"))
    (declaim (optimize sb-cover:store-coverage-data))
    (asdf:oos 'asdf:load-op system :force t)
    (asdf:test-system system)
    (prog1
        (sb-cover:report directory)
      (declaim (optimize (sb-cover:store-coverage-data 0)))))

  (gen-report :std)
  (gen-report :sxp)
  (gen-report :cli)
  (gen-report :xkb)
  (gen-report :alpm)
  (gen-report :btrfs)
  (gen-report :bqn)
  (gen-report :k)
  (gen-report :tree-sitter)
  (gen-report :uring)
  (gen-report :zstd)
  (gen-report :blake3)
  (gen-report :rocksdb)
  ;; (gen-report :rdb)
  (gen-report :skel)
  (gen-report :organ)
  (gen-report :nlp)
  (gen-report :dot)
  (gen-report :packy)
#+end_src
** std
#+begin_src lisp :results output replace :exports both
  (load "lisp/std/tests.lisp")
  (asdf:test-system :std)
#+end_src

#+RESULTS:
#+begin_example
in suite std with 9/9 tests:
#<PASS ALIEN-TEST314483> 
#<PASS PAN-TEST314482> 
#<PASS ANA-TEST314481> 
#<PASS FMT-TEST314480> 
#<PASS THREAD-TEST314479> 
#<PASS COND-TEST314478> 
#<PASS LIST-TEST314477> 
#<PASS STR-TEST314476> 
#<PASS SYM-TEST314475> 
No tests failed.
#+end_example

#+begin_src lisp :results output replace :exports both
  (load "lisp/lib/sxp/tests.lisp")
  (setq *sxp-test-file* "lisp/lib/sxp/tests.sxp")
  (std/rt:do-tests :sxp)
#+end_src

#+RESULTS:
: in suite sxp with 4/4 tests:
: #<PASS SXP-STREAM-TEST311111> 
: #<PASS SXP-STRING-TEST311110> 
: #<PASS SXP-FILE-TEST311109> 
: #<PASS FORMS-TEST311108> 
: No tests failed.

** lib
*** rdb
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/rdb/tests.lisp")
  (asdf:test-system :rdb)
#+end_src

*** organ
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/organ/tests.lisp")
  (asdf:test-system :organ)
#+end_src
#+RESULTS:
#+begin_example
in suite organ with 3/3 tests:

#<FAIL #<FUNCTION (LAMBDA (STRING CL-PPCRE::START CL-PPCRE::END)
                    :IN
                    CL-PPCRE::CREATE-SCANNER-AUX) {100AC9C56B}> IS NOT A STRING DESIGNATOR.> 
#<PASS ORG-LINES-TEST313189> 
#<PASS ORG-FILE-TEST313188> 
1 out of 3 total tests failed: 
   #<STD/RT:TEST ORG-HEADLINE :FN ORG-HEADLINE-TEST313190 :ARGS NIL :PERSIST NIL {100AE3E723}>.
1 unexpected failures: 
   #<FAIL #<FUNCTION (LAMBDA (STRING CL-PPCRE::START CL-PPCRE::END)
                    :IN
                    CL-PPCRE::CREATE-SCANNER-AUX) {100AC9C56B}> IS NOT A STRING DESIGNATOR.>.
#+end_example
*** skel
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/skel/tests.lisp")
  (asdf:test-system :skel)
#+end_src
#+RESULTS:
#+begin_example
in suite skel with 6/6 tests:
#<FAIL THE FUNCTION SKEL/CORE:MAKE-SK-VM IS UNDEFINED.> 
#<FAIL THE FUNCTION SKEL/CORE:MAKE-SOURCE-HEADER-COMMENT IS UNDEFINED.> 
#<PASS SKELRC-TEST313206> 
#<FAIL THE FUNCTION SKEL/CORE:MAKE-SOURCE-HEADER-COMMENT IS UNDEFINED.> 
#<FAIL THE FUNCTION SKEL/CORE:MAKE-SHEBANG-COMMENT IS UNDEFINED.> 
#<PASS SANITY-TEST313203> 
4 out of 6 total tests failed: 
   #<STD/RT:TEST VM :FN VM-TEST313208 :ARGS NIL :PERSIST NIL {100D0B1FE3}>, 
   #<STD/RT:TEST MAKEFILE :FN MAKEFILE-TEST313207 :ARGS NIL :PERSIST NIL {100D0B1EF3}>, 
   #<STD/RT:TEST SKELFILE :FN SKELFILE-TEST313205 :ARGS NIL :PERSIST NIL {100D0B1D13}>, 
   #<STD/RT:TEST HEADER-COMMENTS :FN HEADER-COMMENTS-TEST313204 :ARGS NIL :PERSIST NIL {100D0B1C23}>.
4 unexpected failures: 
   #<FAIL THE FUNCTION SKEL/CORE:MAKE-SHEBANG-COMMENT IS UNDEFINED.>, 
   #<FAIL THE FUNCTION SKEL/CORE:MAKE-SOURCE-HEADER-COMMENT IS UNDEFINED.>, 
   #<FAIL THE FUNCTION SKEL/CORE:MAKE-SOURCE-HEADER-COMMENT IS UNDEFINED.>, 
   #<FAIL THE FUNCTION SKEL/CORE:MAKE-SK-VM IS UNDEFINED.>.
#+end_example
*** packy
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/packy/tests.lisp")
  (asdf:test-system :packy)
#+end_src

#+RESULTS:
: in suite packy with 1/1 tests:
: #<PASS PACKY-OBJECTS-TEST314215> 
: No tests failed.

*** nlp
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/nlp/tests.lisp")
  (asdf:test-system :nlp)
#+end_src

#+RESULTS:
: in suite nlp with 3/3 tests:
: #<PASS TEXTRANK-TEST314218> 
: #<PASS DBSCAN-TEST314217> 
: #<PASS PORTER-STEM-TEST314216> 
: No tests failed.

*** dot
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/dot/tests.lisp")
  (asdf:test-system :dot)
#+end_src

#+RESULTS:
: in suite dot with 1/1 tests:
: ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#<PASS DOT-TEST314273> 
: No tests failed.

** ffi
*** btrfs
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/btrfs/tests.lisp")
  (asdf:test-system :btrfs)
#+end_src

#+RESULTS:
: in suite btrfs with 0/0 tests:
: No tests failed.

*** rocksdb
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/rocksdb/tests.lisp")
  (asdf:test-system :rocksdb)
#+end_src

#+RESULTS:
: in suite rocksdb with 2/2 tests:
: #<PASS DB-BASIC-TEST314349> 
: #<PASS SET-OPTS-TEST314348> 
: No tests failed.

*** uring
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/uring/tests.lisp")
  (asdf:test-system :uring)
#+end_src

#+RESULTS:
: in suite uring with 0/0 tests:
: No tests failed.

*** tree-sitter
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/tree-sitter/tests.lisp")
  (asdf:test-system :tree-sitter)
#+end_src

#+RESULTS:
: in suite tree-sitter with 2/2 tests:
: #<FAIL THE ALIEN FUNCTION "TREE_SITTER_RUST" IS UNDEFINED.> 
: #<PASS TS-JSON-TEST314396> 
: 1 out of 2 total tests failed: 
:    #<STD/RT:TEST TS-RUST :FN TS-RUST-TEST314397 :ARGS NIL :PERSIST NIL {100E081033}>.
: 1 unexpected failures: 
:    #<FAIL THE ALIEN FUNCTION "TREE_SITTER_RUST" IS UNDEFINED.>.

*** k
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/k/tests.lisp")
  (asdf:test-system :k)
#+end_src

#+RESULTS:
: in suite k with 1/1 tests:
: #<PASS K-TEST314399> 
: No tests failed.

*** bqn
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/bqn/tests.lisp")
  (asdf:test-system :bqn)
#+end_src

#+RESULTS:
: in suite bqn with 1/1 tests:
: #<FAIL ARITHMETIC ERROR FLOATING-POINT-INVALID-OPERATION SIGNALLED> 
: 1 out of 1 total tests failed: 
:    #<STD/RT:TEST BQN :FN BQN-TEST314401 :ARGS NIL :PERSIST NIL {100F4E8B43}>.
: 1 unexpected failures: 
:    #<FAIL ARITHMETIC ERROR FLOATING-POINT-INVALID-OPERATION SIGNALLED>.

*** blake3
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/blake3/tests.lisp")
  (asdf:test-system :blake3)
#+end_src

#+RESULTS:
#+begin_example
in suite blake3 with 2/2 tests:

#<sb-alien-internals:alien-value :sap #X7F21E6B1F888 :type (*
                                                            (sb-alien:struct
                                                             blake3/pkg:blake3-hasher
                                                             (blake3/pkg::key
                                                              (array
                                                               (sb-alien:unsigned
                                                                32)
                                                               8)
                                                              :offset 0)
                                                             (blake3/pkg::chunk
                                                              (sb-alien:struct
                                                               blake3/pkg:blake3-chunk-state
                                                               (blake3/pkg::key
                                                                (array
                                                                 (sb-alien:unsigned
                                                                  32)
                                                                 8)
                                                                :offset 0)
                                                               (blake3/pkg::chunk-counter
                                                                (sb-alien:unsigned
                                                                 64)
                                                                :offset 256)
                                                               (blake3/pkg::buf
                                                                (array
                                                                 (sb-alien:unsigned
                                                                  8)
                                                                 64)
                                                                :offset 320)
                                                               (blake3/pkg::buf-len
                                                                (sb-alien:unsigned
                                                                 8)
                                                                :offset 832)
                                                               (blake3/pkg::blocks-compressed
                                                                (sb-alien:unsigned
                                                                 8)
                                                                :offset 840)
                                                               (blake3/pkg::flags
                                                                (sb-alien:unsigned
                                                                 8)
                                                                :offset 848))
                                                              :offset 256)
                                                             (blake3/pkg::cv-stack-len
                                                              (sb-alien:unsigned
                                                               8)
                                                              :offset 1152)
                                                             (blake3/pkg::cv-stack
                                                              (array
                                                               (sb-alien:unsigned
                                                                8)
                                                               1760)
                                                              :offset 1160)))> 
#<sb-alien-internals:alien-value :sap #X7F21E6B1F880 :type (*
                                                            (*
                                                             (sb-alien:unsigned
                                                              8)))> 
#<PASS HASHER-TEST314449> 
#<PASS VERSION-TEST314448> 
No tests failed.
in suite blake3 with 0/2 tests:
No tests failed.
#+end_example

*** alpm
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/alpm/tests.lisp")
  (asdf:test-system :alpm)
#+end_src

#+RESULTS:
: in suite alpm with 1/1 tests:
: #<PASS ALPM-VERSION-TEST314451> 
: No tests failed.

*** xkb
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/xkb/tests.lisp")
  (asdf:test-system :xkb)
#+end_src

#+RESULTS:
: in suite xkb with 1/1 tests:
: #<PASS XKB-BASIC-TEST314453> 
: No tests failed.

* emacs
=sudo pacman -Syu libvoikko librsvg imagemagick=

