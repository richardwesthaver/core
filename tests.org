{{{header(tests,Richard Westhaver,ellis@rwest.io,core test results)}}}
* rust
** sys
These crates contain FFI bindings to foreign libraries, usually in C.
*** btrfs
*** btrfsutil
*** rocksdb
** lib
*** TODO alch
*** audio
#+begin_src shell :dir rust/lib/audio :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test default_device ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** crypto
#+begin_src shell :dir rust/lib/crypto :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 6 tests
test tests::salsa20_key0_iv1 ... ok
test tests::salsa20_key0_ivhi ... ok
test tests::salsa20_key1_iv0 ... ok
test tests::xsalsa20_encrypt_hello_world ... ok
test tests::xsalsa20_encrypt_zeros ... ok
test tests::gen_keypair ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** TODO db
#+begin_src shell :dir rust/lib/db :results output replace :exports results :eval no
cargo test
#+end_src

#+RESULTS:

*** flate
#+begin_src shell :dir rust/lib/flate :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test pack_test ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** hash
#+begin_src shell :dir rust/lib/hash :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 4 tests
test tests::id_hex ... ok
test tests::id_state_hash ... ok
test tests::rand_id ... ok
test tests::random_demon_id_is_valid ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** krypt
*** logger
#+begin_src shell :dir rust/lib/logger :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test tests::simple_init ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** sxp
#+begin_src shell :dir rust/lib/sxp :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 1 test
test canonical_fmt ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 5 tests
test list_form ... ok
test nil_form ... ok
test num_form ... ok
test str_form ... ok
test sym_form ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 3 tests
test ser_enum ... ok
test ser_form ... ok
test ser_struct ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 5 tests
test list_start_token ... ok
test list_end_token ... ok
test sym_token ... ok
test str_token ... ok
test num_token ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
*** tenex
*** util
#+begin_src shell :dir rust/lib/util :results output replace :exports results
cargo test
#+end_src
#+RESULTS:
#+begin_example

running 1 test
test tests::test_related_paths ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

#+end_example
* lisp
#+begin_src lisp :results silent
  (let ((systems 
          '("lisp/std/std.asd" "lisp/lib/rdb/rdb.asd" "lisp/lib/organ/organ.asd" "lisp/lib/skel/skel.asd"
            "lisp/lib/packy/packy.asd" "lisp/lib/nlp/nlp.asd" "lisp/lib/dot/dot.asd"
            "lisp/ffi/rocksdb/rocksdb.asd" "lisp/ffi/btrfs/btrfs.asd" "lisp/ffi/uring/uring.asd"
            "lisp/ffi/k/k.asd" "lisp/ffi/bqn/bqn.asd" "lisp/ffi/tree-sitter/tree-sitter.asd" 
            "lisp/ffi/blake3/blake3.asd")))
    (mapc (lambda (x) (asdf:load-asd (pathname x))) systems))
  (asdf:load-system :std)
  (asdf:load-system :std/rt)
#+end_src
** std
#+begin_src lisp :results output replace :exports both
  (load "lisp/std/tests.lisp")
  (asdf:test-system :std)
#+end_src

#+RESULTS:
#+begin_example
in suite std with 10/10 tests:
#<PASS PAN-TEST278115> 
#<PASS ANA-TEST278114> 
#<PASS FMT-TEST278113> 
#<PASS ALIEN-TEST278112> 
#<PASS THREAD-TEST278111> 
#<PASS COND-TEST278110> 
#<PASS LOG-TEST278109> 
#<PASS LIST-TEST278108> 
#<PASS STR-TEST278107> 
#<PASS SYM-TEST278106> 
No tests failed.
#+end_example

#+begin_src lisp :results output replace :exports both
  (setq *sxp-test-file* "lisp/std/tests/tests.sxp")
  (load "lisp/std/tests/sxp.lisp")
  (std/rt:do-tests :sxp)
#+end_src

#+RESULTS:
: in suite sxp with 4/4 tests:
: #<PASS SXP-STREAM-TEST278123> 
: #<PASS SXP-STRING-TEST278122> 
: #<PASS SXP-FILE-TEST278121> 
: #<PASS FORMS-TEST278120> 
: No tests failed.

** lib
*** rdb
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/rdb/tests.lisp")
  (asdf:test-system :rdb)
#+end_src
#+RESULTS:
: in suite rdb with 4/4 tests:
: #<PASS WITH-CF-TEST2374> 
: #<PASS WITH-ITER-TEST2373> 
: #<PASS WITH-DB-TEST2372> 
: #<PASS RDB-TEST2371> 
: No tests failed.
*** organ
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/organ/tests.lisp")
  (asdf:test-system :organ)
#+end_src
#+RESULTS:
#+begin_example
in suite organ with 3/3 tests:

#<FAIL #<FUNCTION (LAMBDA (STRING CL-PPCRE::START CL-PPCRE::END)
                    :IN
                    CL-PPCRE::CREATE-SCANNER-AUX) {100BDCE29B}> IS NOT A STRING DESIGNATOR.> 
#<PASS ORG-LINES-TEST2339> 
#<PASS ORG-FILE-TEST2338> 
1 out of 3 total tests failed: 
   #<STD/RT:TEST ORG-HEADLINE :FN ORG-HEADLINE-TEST2340 :ARGS NIL :PERSIST NIL {1009D95003}>.
1 unexpected failures: 
   #<FAIL #<FUNCTION (LAMBDA (STRING CL-PPCRE::START CL-PPCRE::END)
                    :IN
                    CL-PPCRE::CREATE-SCANNER-AUX) {100BDCE29B}> IS NOT A STRING DESIGNATOR.>.
#+end_example
*** skel
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/skel/tests.lisp")
  (asdf:test-system :skel)
#+end_src
#+RESULTS:
#+begin_example
in suite skel with 6/6 tests:
#<PASS VM-TEST1314> 

#<FAIL WHILE COMPUTING THE CLASS PRECEDENCE LIST OF THE CLASS NAMED SKEL/COMP/MAKE:MAKEFILE.
THE CLASS NAMED SKEL/COMP/MAKE::SKEL IS A FORWARD REFERENCED CLASS.
THE CLASS NAMED SKEL/COMP/MAKE::SKEL IS A DIRECT SUPERCLASS OF THE CLASS NAMED SKEL/COMP/MAKE:MAKEFILE.> 
#<PASS SKELRC-TEST1312> 
#<FAIL THE FUNCTION SKEL/CORE/UTIL::GETCWD IS UNDEFINED.> 
#<PASS HEADER-COMMENTS-TEST1310> 
#<PASS SANITY-TEST1309> 
2 out of 6 total tests failed: 
   #<STD/RT:TEST MAKEFILE :FN MAKEFILE-TEST1313 :ARGS NIL :PERSIST NIL {100B217673}>, 
   #<STD/RT:TEST SKELFILE :FN SKELFILE-TEST1311 :ARGS NIL :PERSIST NIL {100B2123F3}>.
2 unexpected failures: 
   #<FAIL THE FUNCTION SKEL/CORE/UTIL::GETCWD IS UNDEFINED.>, 
   #<FAIL WHILE COMPUTING THE CLASS PRECEDENCE LIST OF THE CLASS NAMED SKEL/COMP/MAKE:MAKEFILE.
THE CLASS NAMED SKEL/COMP/MAKE::SKEL IS A FORWARD REFERENCED CLASS.
THE CLASS NAMED SKEL/COMP/MAKE::SKEL IS A DIRECT SUPERCLASS OF THE CLASS NAMED SKEL/COMP/MAKE:MAKEFILE.>.
#+end_example
*** packy
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/packy/tests.lisp")
  (asdf:test-system :packy)
#+end_src

#+RESULTS:
: in suite packy with 0/0 tests:
: No tests failed.

*** nlp
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/nlp/tests.lisp")
  (asdf:test-system :nlp)
#+end_src

#+RESULTS:
: in suite nlp with 3/3 tests:
: #<PASS TEXTRANK-TEST278176> 
: #<PASS DBSCAN-TEST278175> 
: #<PASS PORTER-STEM-TEST278174> 
: No tests failed.

*** dot
#+begin_src lisp :results output replace :exports results
  (load "lisp/lib/dot/tests.lisp")
  (asdf:test-system :dot)
#+end_src

#+RESULTS:
: in suite dot with 1/1 tests:
: #<PASS DOT-TEST278208> 
: No tests failed.

** ffi
*** btrfs
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/btrfs/tests.lisp")
  (asdf:test-system :btrfs)
#+end_src
#+RESULTS:
: in suite btrfs with 0/0 tests:
: No tests failed.
*** rocksdb
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/rocksdb/tests.lisp")
  (asdf:test-system :rocksdb)
#+end_src
#+RESULTS:
: in suite rocksdb with 2/2 tests:
: #<PASS DB-BASIC-TEST276139> 
: #<PASS SET-OPTS-TEST276138> 
: No tests failed.
*** uring
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/uring/tests.lisp")
  (asdf:test-system :uring)
#+end_src
#+RESULTS:
: in suite uring with 0/0 tests:
: No tests failed.
*** tree-sitter
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/tree-sitter/tests.lisp")
  (asdf:test-system :tree-sitter)
#+end_src
#+RESULTS:
: in suite tree-sitter with 0/0 tests:
: No tests failed.
*** k
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/k/tests.lisp")
  (asdf:test-system :k)
#+end_src
#+RESULTS:
: in suite k with 1/1 tests:
: #<PASS K-TEST827560> 
: No tests failed.
*** bqn
#+begin_src lisp :results output replace :exports results
  (load "lisp/ffi/bqn/tests.lisp")
  (asdf:test-system :bqn)
#+end_src
#+RESULTS:
: in suite bqn with 1/1 tests:
: #<FAIL ARITHMETIC ERROR FLOATING-POINT-INVALID-OPERATION SIGNALLED> 
: 1 out of 1 total tests failed: 
:    #<STD/RT:TEST BQN :FN BQN-TEST827575 :ARGS NIL :PERSIST NIL {1005F9FB73}>.
: 1 unexpected failures: 
:    #<FAIL ARITHMETIC ERROR FLOATING-POINT-INVALID-OPERATION SIGNALLED>.
* emacs
There are a few internal packages that link to system libraries at
runtime - the following libraries need to be installed for a fully
functioning editor:

- libvoikko ::
  =sudo pacman -Syu libvoikko=
- librsvg ::
- imagemagick ::
