#+TITLE: krypt
#+DESCRIPTION: Unix key management library
* Overview
The point of this library is to provide tools for /key management/
needs on Unix platforms. Our intent is to wrap well-built system
libraries such as Linux keyutils (keyctl) and provide simple safe APIs
for Common Lisp and Rust.

This library is opinionated about the algorithms it uses and is not a
general purpose tool.

For an introduction to the key management techniques used, check [[https://rtfm.co.ua/en/what-is-linux-keyring-gnome-keyring-secret-service-and-d-bus/][here]].

- [[https://blog.cloudflare.com/the-linux-kernel-key-retention-service-and-why-you-should-use-it-in-your-next-application/][Cloudflare - The Linux Kernel Key Retention Service and why you should use it in your next application]]
* System Libraries
** keyutils
#+begin_src shell :noeval t :exports code
  sudo pacman -Sy keyutils
#+end_src

The library we are most keen on is [[https://man7.org/linux/man-pages/man7/keyutils.7.html][keyutils]] from the Linux Kernel
([[https://github.com/Distrotech/keyutils/blob/master/keyutils.h][git]]). It provides utilities for working with cryptographic keys and
uses syscalls to do the dirty work in kernel space. It has a simple
API and is supported on Linux/Darwin. Some Rust bindings are on
[[https://crates.io/crates/keyutils][crates.io]], no Common Lisp bindings (yet).

It's a pretty bare-bones interface but is easy to embed in
applications. It's just 3 syscalls: =add_key=, =request_key=,
=keyctl=.

The utility program provided is called =keyctl= which is useful for
testing and shell scripting.

#+begin_src shell :results silent :exports code
  keyctl add user foo bar @s
  keyctl list @s
#+end_src

** secret-service
The [[https://specifications.freedesktop.org/secret-service/latest/][secret-service]] API is the brain-child of GNOME Keyring dev Stef
Walter and KWallet's Michael Leupold. User-space general-purpose
secrets management - needs to be implemented by a system daemon. Linux
only and requires D-Bus.

There are a handful of apps that support the client API -
gnome-keyring, KeePassXC, etc.

D-Bus is a real PITA so we may not go this route.

** keychain
[[https://developer.apple.com/documentation/security/keychain_services/][keychain-services]] serve a similar purpose to secret-service. It is
MacOS only.
